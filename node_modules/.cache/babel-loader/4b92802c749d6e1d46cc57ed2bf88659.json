{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from 'firebase/auth';\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from './firebase.init';\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [admin, setAdmin] = useState(false);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      console.log(user);\n\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  const createAccountWithGoogle = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  const loginWithEmailAndPassword = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {\n      const newUser = { ...user,\n        displayName: name\n      }; // recommend\n\n      setUser(newUser); // ...\n    }).catch(error => {// An error occurred\n      // ...\n    });\n  };\n\n  const logOut = () => {\n    console.log(\"logout\");\n    signOut(auth).then(() => {\n      setUser({});\n    }).catch(error => {// An error happened.\n    });\n  }; //  console.log(user.email);\n\n\n  const hanldeUserInfoRegister = (email, name) => {\n    fetch(\"http://localhost:5000/addUserInfo\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        name\n      })\n    }).then(res => res.json()).then(result => console.log(result));\n  };\n\n  return {\n    user,\n    setUser,\n    signInWithGoogle,\n    createAccountWithGoogle,\n    loginWithEmailAndPassword,\n    isLoading,\n    setIsLoading,\n    logOut,\n    updateName,\n    auth,\n    hanldeUserInfoRegister\n  };\n};\n\n_s(useFirebase, \"s4dISoieijovDUBMhMbUlRkVWHM=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["C:/project/pearls/src/Web/Firebase/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","admin","setAdmin","auth","googleProvider","unsubscribe","console","log","signInWithGoogle","createAccountWithGoogle","email","password","loginWithEmailAndPassword","updateName","name","currentUser","displayName","then","newUser","catch","error","logOut","hanldeUserInfoRegister","fetch","method","headers","body","JSON","stringify","res","json","result"],"mappings":"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","sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from 'firebase/auth';\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from './firebase.init';\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n  \r\n  const [user , setUser]=useState({})\r\n  const [isLoading , setIsLoading] =useState(true);\r\n  const [admin, setAdmin] = useState(false);\r\n  const auth = getAuth()\r\n  const googleProvider= new GoogleAuthProvider();\r\n\r\n\r\nuseEffect(() =>{\r\n     const unsubscribe = onAuthStateChanged(auth , (user)=> {\r\n        console.log(user);\r\n          if(user){\r\n               \r\n              setUser(user)\r\n          } else{\r\n              setUser({})\r\n          }\r\n          setIsLoading(false)\r\n     })\r\n      return ()=> unsubscribe()\r\n},[])\r\n \r\n\r\n  const signInWithGoogle=()=> {\r\n   return  signInWithPopup(auth, googleProvider)\r\n \r\n  }\r\n\r\n\r\nconst  createAccountWithGoogle =(email , password)=> {\r\n\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\n\r\nconst loginWithEmailAndPassword =(email,password)=> {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n}\r\n    \r\n\r\nconst updateName= (name)=> {\r\n  updateProfile(auth.currentUser, {\r\n    displayName: name\r\n  }).then(() => {\r\n    const newUser={...user, displayName: name} // recommend\r\n   setUser(newUser)\r\n    \r\n    // ...\r\n  }).catch((error) => {\r\n    // An error occurred\r\n    // ...\r\n  });\r\n}\r\n\r\n const logOut=()=> {\r\n     console.log(\"logout\");\r\n    signOut(auth).then(() => {\r\n        setUser({})\r\n      }).catch((error) => {\r\n        // An error happened.\r\n      });\r\n }\r\n//  console.log(user.email);\r\n const hanldeUserInfoRegister = (email,name) => {\r\n  fetch(\"http://localhost:5000/addUserInfo\", {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({ email,name }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((result) => console.log(result));\r\n};\r\n\r\n    return {\r\n       user,setUser,\r\n       signInWithGoogle,\r\n       createAccountWithGoogle,\r\n       loginWithEmailAndPassword,\r\n       isLoading,\r\n       setIsLoading,\r\n       logOut,\r\n       updateName,\r\n       auth,\r\n       hanldeUserInfoRegister\r\n       \r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}