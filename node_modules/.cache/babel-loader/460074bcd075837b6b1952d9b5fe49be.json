{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from 'firebase/auth';\nimport { useEffect, useState } from \"react\";\nimport initializeAuthentication from './firebase.init';\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      console.log(user);\n\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const signInWithGoogle = () => {\n    return signInWithPopup(auth, googleProvider);\n  };\n\n  const createAccountWithGoogle = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n\n  const loginWithEmailAndPassword = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {\n      const newUser = { ...user,\n        displayName: name\n      }; // recommend\n\n      setUser(newUser); // ...\n    }).catch(error => {// An error occurred\n      // ...\n    });\n  };\n\n  const logOut = () => {\n    console.log(\"logout\");\n    signOut(auth).then(() => {\n      setUser({});\n    }).catch(error => {// An error happened.\n    });\n  };\n\n  return {\n    user,\n    setUser,\n    signInWithGoogle,\n    createAccountWithGoogle,\n    loginWithEmailAndPassword,\n    isLoading,\n    setIsLoading,\n    logOut,\n    updateName\n  };\n};\n\n_s(useFirebase, \"1rAJaVikM1QHa9km24/OZYRXcPg=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["C:/project/pearls/src/Web/Firebase/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signOut","updateProfile","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","googleProvider","unsubscribe","console","log","signInWithGoogle","createAccountWithGoogle","email","password","loginWithEmailAndPassword","updateName","name","currentUser","displayName","then","newUser","catch","error","logOut"],"mappings":";;AAAA,SAASA,8BAAT,EAAyCC,OAAzC,EAAkDC,kBAAlD,EAAsEC,kBAAtE,EAA0FC,0BAA1F,EAAsHC,eAAtH,EAAuIC,OAAvI,EAAgJC,aAAhJ,QAAqK,eAArK;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,wBAAP,MAAqC,iBAArC;AACAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAiBJ,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACK,SAAD,EAAaC,YAAb,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMO,IAAI,GAAGf,OAAO,EAApB;AACA,QAAMgB,cAAc,GAAE,IAAIf,kBAAJ,EAAtB;AAGFM,EAAAA,SAAS,CAAC,MAAK;AACV,UAAMU,WAAW,GAAGf,kBAAkB,CAACa,IAAD,EAASJ,IAAD,IAAS;AACpDO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;;AACE,UAAGA,IAAH,EAAQ;AAEJC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAHD,MAGM;AACFC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACJ,KATqC,CAAtC;AAUC,WAAO,MAAKG,WAAW,EAAvB;AACL,GAZQ,EAYP,EAZO,CAAT;;AAeE,QAAMG,gBAAgB,GAAC,MAAK;AAC3B,WAAQhB,eAAe,CAACW,IAAD,EAAOC,cAAP,CAAvB;AAEA,GAHD;;AAMF,QAAOK,uBAAuB,GAAE,CAACC,KAAD,EAASC,QAAT,KAAqB;AAEjD,WAAOxB,8BAA8B,CAACgB,IAAD,EAAOO,KAAP,EAAcC,QAAd,CAArC;AACH,GAHD;;AAMA,QAAMC,yBAAyB,GAAE,CAACF,KAAD,EAAOC,QAAP,KAAmB;AAChD,WAAOpB,0BAA0B,CAACY,IAAD,EAAOO,KAAP,EAAcC,QAAd,CAAjC;AACH,GAFD;;AAKA,QAAME,UAAU,GAAGC,IAAD,IAAS;AACzBpB,IAAAA,aAAa,CAACS,IAAI,CAACY,WAAN,EAAmB;AAC9BC,MAAAA,WAAW,EAAEF;AADiB,KAAnB,CAAb,CAEGG,IAFH,CAEQ,MAAM;AACZ,YAAMC,OAAO,GAAC,EAAC,GAAGnB,IAAJ;AAAUiB,QAAAA,WAAW,EAAEF;AAAvB,OAAd,CADY,CAC+B;;AAC5Cd,MAAAA,OAAO,CAACkB,OAAD,CAAP,CAFa,CAIZ;AACD,KAPD,EAOGC,KAPH,CAOUC,KAAD,IAAW,CAClB;AACA;AACD,KAVD;AAWD,GAZD;;AAcC,QAAMC,MAAM,GAAC,MAAK;AACdf,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACDd,IAAAA,OAAO,CAACU,IAAD,CAAP,CAAcc,IAAd,CAAmB,MAAM;AACrBjB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAFH,EAEKmB,KAFL,CAEYC,KAAD,IAAW,CAClB;AACD,KAJH;AAKF,GAPD;;AASG,SAAO;AACJrB,IAAAA,IADI;AACCC,IAAAA,OADD;AAEJQ,IAAAA,gBAFI;AAGJC,IAAAA,uBAHI;AAIJG,IAAAA,yBAJI;AAKJX,IAAAA,SALI;AAMJC,IAAAA,YANI;AAOJmB,IAAAA,MAPI;AAQJR,IAAAA;AARI,GAAP;AAWH,CA1ED;;GAAMf,W;;AA4EN,eAAeA,WAAf","sourcesContent":["import { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from 'firebase/auth';\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from './firebase.init';\r\ninitializeAuthentication();\r\n\r\nconst useFirebase = () => {\r\n  \r\n  const [user , setUser]=useState({})\r\n  const [isLoading , setIsLoading] =useState(true)\r\n  const auth = getAuth()\r\n  const googleProvider= new GoogleAuthProvider()\r\n\r\n\r\nuseEffect(() =>{\r\n     const unsubscribe = onAuthStateChanged(auth , (user)=> {\r\n        console.log(user);\r\n          if(user){\r\n               \r\n              setUser(user)\r\n          } else{\r\n              setUser({})\r\n          }\r\n          setIsLoading(false)\r\n     })\r\n      return ()=> unsubscribe()\r\n},[])\r\n \r\n\r\n  const signInWithGoogle=()=> {\r\n   return  signInWithPopup(auth, googleProvider)\r\n \r\n  }\r\n\r\n\r\nconst  createAccountWithGoogle =(email , password)=> {\r\n\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n}\r\n\r\n\r\nconst loginWithEmailAndPassword =(email,password)=> {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n}\r\n    \r\n\r\nconst updateName= (name)=> {\r\n  updateProfile(auth.currentUser, {\r\n    displayName: name\r\n  }).then(() => {\r\n    const newUser={...user, displayName: name} // recommend\r\n   setUser(newUser)\r\n    \r\n    // ...\r\n  }).catch((error) => {\r\n    // An error occurred\r\n    // ...\r\n  });\r\n}\r\n\r\n const logOut=()=> {\r\n     console.log(\"logout\");\r\n    signOut(auth).then(() => {\r\n        setUser({})\r\n      }).catch((error) => {\r\n        // An error happened.\r\n      });\r\n }\r\n\r\n    return {\r\n       user,setUser,\r\n       signInWithGoogle,\r\n       createAccountWithGoogle,\r\n       loginWithEmailAndPassword,\r\n       isLoading,\r\n       setIsLoading,\r\n       logOut,\r\n       updateName\r\n       \r\n    }\r\n}\r\n\r\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}